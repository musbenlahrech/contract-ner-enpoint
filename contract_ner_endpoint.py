# -*- coding: utf-8 -*-
"""contract-ner-endpoint.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1IMctYAEg9UWjC1wgRYx3SH3Et8zIr4oF
"""

!pip install flask_ngrok flask_cors langdetect

import spacy
import pickle
import random
import json
from random import shuffle

"""Preprcessing"""

def preprocess(txt):
  x = txt.replace('\n',' ').strip()
  return x

"""Load the Model"""

nlp_loaded_model = spacy.load('/trained-model')

text = """
Sales Agreement    This Contract for Sale of Goods is made on 2018-01-30 between Marillac St. Vincent Family Services Inc DBA St. Vincent DePaul Center (“Seller”) with its principal place of business at 2608 S DAMEN FORESTVIEW, and ALLIED WASTE TRANSPORTATION INC (“Buyer”) with its principal place of business at 212 S FRANCISCO AVENUE EFT CHICAGO, for the purchase of the goods described below:  Title/Description Cost Unit Qty Subtotal Item 1 $100.00 /unit 100 $10,000.00 Item 2 $34.00 /unit 20 $680.00 Fixed Total:\t$10,680.00 Tax (4.5%):\t$480.60 $11,160.60  1. Term. This Contract shall begin on {{contract_start_date}} and end upon the last delivery for the quantity specified in this agreement, unless the parties agree otherwise. However, if, as of such date, Buyer is in arrears on the account, Seller may then cancel this Contract and sue for damages, including lost profits, offsetting the deposit there against, and further recover its cost of suit including attorney fees.      2. Delivery. Buyer will give Seller 639 days’ advance notice regarding the quantity requested for delivery. Upon receipt of the request for delivery, Seller will arrange for delivery through a carrier chosen by Seller, the costs of which shall be F.O.B. Origin Freight Prepaid & Added To Invoice.      3. Risk Of Loss. The risk of loss from any casualty to the Goods, regardless of the cause, will be the responsibility of the Buyer once the goods have been shipped by the Seller.      4. Acceptance. Buyer will have the right to inspect the goods upon receipt, and within two (2) business days after delivery, Buyer must give notice to Seller of any claim for damages on account of condition, quality, or grade of the goods, and Buyer must specify the basis of the claim in detail. Failure of Buyer to comply with these conditions will constitute irrevocable acceptance of the goods by Buyer.      5. Charges. Seller shall invoice Buyer upon and for each shipment. Buyer shall pay all charges on terms of Net 30 Days Receipt of Goods. Overdue invoices shall also bear interest at the rate of 0 %. If Seller undertakes collection or enforcement efforts, Buyer shall be liable for all costs thereof, including attorney fees. If Buyer is in arrears on any invoice, Seller may, on notice to Buyer, apply the deposit thereto and withhold further delivery until the deposit and all arrearages are brought current.      6. Warranty. Seller warrants that the goods sold hereunder are new and free from substantive defects in workmanship and materials. Seller's liability under the foregoing warranty is limited to replacement of goods or refund of the purchase price at Seller's sole option. No other warranty, express or implied, is made by Seller, and none shall be imputed or presumed.      7. Taxes. All sales taxes, tariffs, and other governmental charges shall be paid by Buyer and are Buyer's Responsibility except as limited by the law.      8. Governing Law. This Contract shall be governed by the laws of the State of { Any disputes brought against the Seller hereunder will be heard in the appropriate federal and state courts located in California.      9. Force Majeure. Seller may, without liability, delay performance or cancel this Contract on account of force majeure events or other circumstances beyond its control, including, but not limited to, strikes, acts of God, political unrest, terrorism, embargo, failure of source of supply, or casualty.      10. Miscellaneous. This Contract contains the entire agreement between the parties and supersedes and replaces all such prior agreements with respect to matters expressly set forth herein. No modification shall be made to this Contract except in writing and signed by both parties. This Contract shall be binding upon the parties and their respective heirs, executors, administrators, successors, assigns and personal representatives.   This contract is entered into on 2018-01-30 by the Buyer and Seller.    Buyer Signature:     Print Name:        Seller Signature:     Print Name
"""
text

def prediction(text, model):
  text = preprocess(text)
  doc = model(text)
  print(doc)
  for ent in doc.ents:
    print(f'{ent.label_.upper():{30}}- {ent.text}')
  return [( ent.text, ent.label_.upper()) for ent in doc.ents]

def doctype(text):
  result = prediction(text,nlp_loaded_model)

"""Test"""

doc = nlp_loaded_model(text)
for ent in doc.ents:
  print(f'{ent.label_:{30}}- {ent.text}')

mus = [1,0,1,1,0]
result = ['o' if m == 0 else 0 for m in mus]
result

def get_titles(text):
  title=[]
  result = prediction(text, nlp_loaded_model)
  for r in result:
    if r[1] == 'CONTRACT TITLE':
      tit = {"key": r[0],"text": r[0]}
      title.append(tit)
  return title
get_titles(text)

"""Contract Title : (for each kayn )

Contracting Parties: {{party1}} , {{party2}}

Start Date: {{start_date}}

Effective Date: {{effective_date}}

Termination Date: {{termination_date}}

Contract Value: {{contract_value}}

Contract Period in days: {{contract_period}}

Addresses: {{address1}} , {{address2}}

"""

def get_entities(text):
 
  ent0 =[]
  ent1 =[]
  ent2 =[]
  ent3 =[]
  ent4 =[]
  ent5 =[]
  ent6 =[]
  ent7 =[]

  result = prediction(text, nlp_loaded_model)
  for r in result:
    if r[1] == 'CONTRACT TITLE':
      # ent = {"key": r[0],"text": r[0]}
      ent = r[0]
      ent0.append(ent)
    if r[1] == 'CONTRACTING PARTIES':
      # ent = {"key": r[0],"text": r[0]}
      ent = r[0]
      ent1.append(ent)
    if r[1] == 'EFFECTIVE DATE':
      # ent = {"key": r[0],"text": r[0]}
      ent = r[0]
      ent2.append(ent)
    if r[1] == 'START DATE':
      # ent = {"key": r[0],"text": r[0]}
      ent = r[0]
      ent3.append(ent)
    if r[1] == 'ADDRESSES':
      # ent = {"key": r[0],"text": r[0]}
      ent = r[0]
      ent4.append(ent)
    if r[1] == 'TERMINATION DATE':
      # ent = {"key": r[0],"text": r[0]}
      ent = r[0]
      ent5.append(ent)
    if r[1] == 'CONTRACT PERIOD':
      # ent = {"key": r[0],"text": r[0]}
      ent = r[0]
      ent6.append(ent)
    if r[1] == 'CONTRACT VALUE':
      # ent = {"key": r[0],"text": r[0]}
      ent = r[0]
      ent7.append(ent)

  res= {
      'CONTRACT TITLE': ent0,
      'CONTRACTING PARTIES': ent1,
      'EFFECTIVE DATE': ent2,
      'START DATE': ent3,
      'ADDRESSES': ent4,
      'TERMINATION DATE': ent5,
      'CONTRACT PERIOD': ent6,
      'CONTRACT VALUE': ent7
  }
  print("this is the res after")
  print(res)

  return res

"""## Api"""

from flask_ngrok import run_with_ngrok
from flask import Flask
from flask import jsonify
from flask import request
from flask_cors import CORS
app = Flask(__name__)
CORS(app)
run_with_ngrok(app)   #starts ngrok when the app is run
mus = 0
@app.route("/")
def home():
    return f"<h1>This is the endpoint for Contract element extraction!</h1>"

@app.route("/entity",methods=['GET', 'POST'])
def entity_api():
    content = request.json
    print("the content received")
    print(content)
    response = jsonify(get_entities(content['text']))
    response.headers.add('Access-Control-Allow-Origin', 'https://localhost:3000')
    return response
@app.route("/doctype",methods=['GET', 'POST'])
def doctype_api():
    content = request.json
    print("the content received")
    print(content)
    titles = get_titles(content['text'])
    #response = jsonify(prediction(content['text'],nlp_loaded_model))
    response =  jsonify(
        {
          "suggested": titles,
         "all": [
             {
             "key": "invoice",
             "text": "Invoice",
             },
             {
              "key": "agreement",
              "text": "Agreement",
              },
              {
             "key": "request",
             "text": "Request",
             },
             {
              "key": "contract",
              "text": "Contract",
              },
            ],
        }
    )
    response.headers.add('Access-Control-Allow-Origin', 'https://localhost:3000')
    return response


app.run()

